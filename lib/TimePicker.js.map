{"version":3,"sources":["TimePicker.js"],"names":["cx","TimePicker","props","context","value","state","onLabelClick","bind","onConfirm","onCancel","onTimeChange","time","parseValue","undefined","open","componentDidMount","container","document","createElement","className","part","build","body","appendChild","renderPopup","componentDidUpdate","timeFormat","begin","end","popup","render","onFocus","onBlur","componentWillUnmount","unmountComponentAtNode","parentElement","removeChild","getSyncUpdates","nextProps","disabled","readOnly","customValidity","defaultValue","isNaN","getTime","Date","vilidity","stringifyValue","format","date","toDate","e","setState","valueMoment","timeMoment","get","onChange","type","target","renderHiddenInput","name","placeholder","labelFormat","others","validity","addStates","focus","getStyleStates","getPartClassName","displayName","defaultProps","autoConfirm","propTypes","string","bool","labalFormat","oneOfType","object","childContextTypes","contextTypes"],"mappings":"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","file":"TimePicker.js","sourcesContent":["/**\n * @file melon/TimePicker\n * @author cxtom <cxtom2008@gmail.com>\n */\n\nimport React, {PropTypes} from 'react';\nimport moment from 'moment';\nimport ReactDOM from 'react-dom';\n\nimport InputComponent from 'melon-core/InputComponent';\nimport {create} from 'melon-core/classname/cxBuilder';\nimport Validity from 'melon-core/Validity';\nimport {getNextValidity} from 'melon-core/util/syncPropsToState';\n\nimport Icon  from 'melon/Icon';\nimport Confirm from 'melon/Confirm';\nimport Panel from './timepicker/Panel';\n\nimport omit from 'lodash/omit';\n\nconst cx = create('TimePicker');\n\nexport default class TimePicker extends InputComponent {\n\n    constructor(props, context) {\n\n        super(props, context);\n\n        const value = this.state.value;\n\n        this.onLabelClick = this.onLabelClick.bind(this);\n        this.onConfirm = this.onConfirm.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n        this.onTimeChange = this.onTimeChange.bind(this);\n\n        this.state = {\n\n            ...this.state,\n\n            // 缓存用户在 confirm 前的选中值\n            time: value ? this.parseValue(value) : undefined,\n\n            // 是否打开选择窗\n            open: false\n        };\n\n    }\n\n    componentDidMount() {\n\n        super.componentDidMount();\n\n        let container = this.container = document.createElement('div');\n\n        container.className = cx().part('popup').build();\n\n        document.body.appendChild(container);\n        this.renderPopup(this.props);\n    }\n\n    componentDidUpdate() {\n        this.renderPopup(this.props);\n    }\n\n    renderPopup(props) {\n\n        const timeFormat = props.timeFormat;\n\n        let {begin, end} = props;\n\n        begin = begin ? this.parseValue(begin) : null;\n        end = end ? this.parseValue(end) : null;\n\n        this.popup = ReactDOM.render(\n            <Confirm\n                open={this.state.open}\n                variants={['timepicker']}\n                onConfirm={this.onConfirm}\n                onCancel={this.onCancel}\n                onShow={this.props.onFocus}\n                onHide={this.props.onBlur}\n                width=\"adaptive\"\n                buttonVariants={['secondery', 'timepicker']} >\n                <Panel\n                    time={this.state.time}\n                    begin={begin}\n                    end={end}\n                    format={timeFormat}\n                    onChange={this.onTimeChange} />\n            </Confirm>,\n            this.container\n        );\n    }\n\n    componentWillUnmount() {\n\n        let container = this.container;\n\n        if (container) {\n            ReactDOM.unmountComponentAtNode(container);\n            container.parentElement.removeChild(container);\n            this.container = container = null;\n        }\n    }\n\n    getSyncUpdates(nextProps) {\n\n        const {disabled, readOnly, customValidity, defaultValue} = nextProps;\n\n        let value = nextProps.value == null ? defaultValue : nextProps.value;\n\n        // 如果有值，那么就试着解析一下；否则设置为 null\n        let time = value ? this.parseValue(value) : null;\n\n        // 如果 time 为 null 或者是 invalid time，那么就用上默认值；\n        // 否则就用解析出来的这个值\n        time = !time || isNaN(time.getTime()) ? new Date() : time;\n\n        const vilidity = getNextValidity(this, {value, disabled, customValidity});\n\n        return {\n            time,\n            vilidity,\n            value: disabled || readOnly || !value ? value : this.stringifyValue(time)\n        };\n\n    }\n\n    /**\n     * 格式化日期\n     *\n     * @param {Date} time 源日期对象\n     * @param {string=} format 日期格式，默认为当前实例的timeFormat\n     * @return {string} 格式化后的日期字符串\n     * @private\n     */\n    stringifyValue(time) {\n\n        if (typeof time === 'string') {\n            return time;\n        }\n\n        const timeFormat = this.props.timeFormat;\n\n        return moment(time).format(timeFormat);\n    }\n\n    /**\n     * 格式化日期对象\n     *\n     * @param  {string} date 日期字符串\n     * @return {Date}        转化后的日期对象\n     * @private\n     */\n    parseValue(date) {\n\n        if (typeof date !== 'string') {\n            return date;\n        }\n\n        return moment(date, this.props.timeFormat).toDate();\n    }\n\n\n    onLabelClick(e) {\n\n        const {disabled, readOnly} = this.props;\n\n        if (disabled || readOnly) {\n            return;\n        }\n\n        this.setState({open: true});\n\n    }\n\n    /**\n     * rawValue 在 TimePicker Dialog上点击确定或取消按钮触发\n     *\n     * @private\n     */\n    onConfirm() {\n\n        let {value, time} = this.state;\n\n        value = this.parseValue(value);\n\n        const valueMoment = moment(value, this.timeFormat);\n        const timeMoment = moment(time);\n\n        if (value !== '' && valueMoment.get('hour') === timeMoment.get('hour')\n            && valueMoment.get('minute') === timeMoment.get('minute')) {\n            this.setState({open: false});\n        }\n\n        this.setState({open: false}, () => {\n\n            super.onChange({\n                type: 'change',\n                target: this,\n                value: this.stringifyValue(time)\n            });\n\n        });\n\n    }\n\n    onCancel() {\n        this.setState({open: false});\n    }\n\n    onTimeChange({time}) {\n        this.setState({time});\n    }\n\n    /**\n     * 渲染input\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderHiddenInput() {\n\n        const {name, value} = this.props;\n\n        return name\n            ? (\n                <input\n                    name={name}\n                    type=\"hidden\"\n                    value={value} />\n            )\n            : null;\n\n    }\n\n    render() {\n\n        const {\n            state,\n            props\n        } = this;\n\n        const {\n            disabled,\n            readOnly,\n            placeholder,\n            timeFormat,\n            labelFormat,\n            ...others\n        } = props;\n\n        const {value, validity} = state;\n\n        const open = state.open;\n        const className = cx(props)\n            .addStates({focus: open})\n            .addStates(this.getStyleStates())\n            .build();\n\n        return (\n            <div {...omit(others, ['autoConfirm', 'name'])} className={className}>\n                {this.renderHiddenInput()}\n                <label\n                    onClick={(disabled || readOnly) ? null : this.onLabelClick}\n                    className={cx.getPartClassName('label')}>\n                    {value ? moment(value, timeFormat).format(labelFormat) : (\n                        <span className={cx.getPartClassName('label-placeholder')}>\n                            {placeholder}\n                        </span>\n                    )}\n                    <Icon icon='expand-more' />\n                </label>\n                <Validity validity={validity} />\n            </div>\n        );\n\n    }\n}\n\nTimePicker.displayName = 'TimePicker';\n\nTimePicker.defaultProps = {\n    ...InputComponent.defaultProps,\n    timeFormat: 'HH:mm:ss',\n    labelFormat: 'HH:mm',\n    placeholder: '请选择',\n    autoConfirm: false\n};\n\nTimePicker.propTypes = {\n    ...InputComponent.propTypes,\n    value: PropTypes.string,\n    autoConfirm: PropTypes.bool,\n    timeFormat: PropTypes.string,\n    labalFormat: PropTypes.string,\n    end: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string\n    ]),\n    begin: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string\n    ])\n};\n\nTimePicker.childContextTypes = InputComponent.childContextTypes;\nTimePicker.contextTypes = InputComponent.contextTypes;\n"]}